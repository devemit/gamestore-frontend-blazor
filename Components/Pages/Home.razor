@page "/"
@inject GamesClient Client
@attribute [StreamRendering]

<PageTitle>Game Store</PageTitle>

@if (games is null)
{
	<p> <em>Loading...</em></p>
}
else
{
	<table class="table table-striped table-bordered table-hover mt-4">
		<thead class="table-dark">
			<th scope="col">Id</th>
			<th scope="col">Name</th>
			<th scope="col text-end">Price</th>
			<th scope="col">Genre</th>
			<th scope="col">Release Date </th>
			<th scope="col"></th>
		</thead>
		<tbody>
			@if (!games.Any())
			{
				<p class="text-center mt-4 fs-5">Add some games to your table.</p>
			}
			else
			{
				@foreach (var game in games)
				{
					<tr>
						<td>@game.Id</td>
						<td>@game.Name</td>
						<td>@game.Price.ToString("C2")</td>
						<td>@game.Genre</td>
						<td>@game.ReleaseDate</td>
						<td>
							<div class="d-flex">
								<a href="@GameUrl(game.Id)" role="button" class="btn btn-primary me-2">Edit</a>
								<button class="btn btn-danger" data-bs-toggle="modal"
									data-bs-target="@GetDeleteModalId(game)">Delete</button>
							</div>
							<DeleteGame Game="@game" />
						</td>
					</tr>
				}
			}
		</tbody>
	</table>
}
<NavLink class="btn btn-primary" href="/editgame">Add Game</NavLink>

@code {
	private GameSummary[]? games;
	protected override async Task OnInitializedAsync()
	{
		games = await Client.GetGamesAsync();
	}
	private static string GameUrl(int id) => $"/editgame/{id}";

	private string GetDeleteModalId(GameSummary game)
	{
		return $"#{DeleteGame.GetModalId(game)}";
	}
}